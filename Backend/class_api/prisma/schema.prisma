generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema", "relationJoins", "views"]
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
  schemas  = ["cs"]
}

model Documents {
  documentId         Int                 @id(map: "PK__Document__EFAAAD857D09D75C") @default(autoincrement())
  docStatus_id       Int?
  codedFile          String?             @map("64codedFile") @db.NVarChar(Max)
  fileType           String?             @db.NVarChar(50)
  service_id         Int?
  DocumentStatusList DocumentStatusList? @relation(fields: [docStatus_id], references: [docStatusId], onDelete: NoAction, onUpdate: NoAction, map: "FK__Documents__docSt__46E78A0C")
  Service            Service?            @relation(fields: [service_id], references: [serviceId], onDelete: NoAction, onUpdate: NoAction, map: "FK__Documents__servi__47DBAE45")

  @@schema("cs")
}

model DocumentStatusList {
  docStatusId Int         @id(map: "PK__Document__92AD4D07B714111F") @default(autoincrement())
  status      String?     @db.VarChar(100)
  description String?     @db.NVarChar(Max)
  Documents   Documents[]

  @@schema("cs")
}

model ReceivingUnit {
  receivingUnitId      Int       @id(map: "PK__Receivin__D50C1D3AB820744C") @default(autoincrement())
  institutionName      String?   @db.NVarChar(255)
  contactNumber        String?   @db.NVarChar(50)
  institutionDirection String?   @db.NVarChar(255)
  contactEmail         String?   @db.NVarChar(255)
  principalActivities  String?   @db.NVarChar(Max)
  Service              Service[]

  @@schema("cs")
}

model Service {
  serviceId               Int                 @id(map: "PK__Service__455070DFF7DE738E") @default(autoincrement())
  student_id              Int?
  serviceType_id          Int?
  servicesStartDate       DateTime?           @db.Date
  service_status_id       Int?
  supervisorName          String?             @db.NVarChar(100)
  supervisorContactNumber String?             @db.NVarChar(50)
  programObjective        String?             @db.NVarChar(Max)
  supervisorPosition      String?             @db.NVarChar(100)
  receivingUnit_id        Int?
  Documents               Documents[]
  ServiceType             ServiceType?        @relation(fields: [serviceType_id], references: [serviceTypeId], onDelete: NoAction, onUpdate: NoAction, map: "FK__Service__service__4222D4EF")
  ServiceStatusList       ServiceStatusList?  @relation(fields: [service_status_id], references: [serviceStatusId], onDelete: NoAction, onUpdate: NoAction, map: "FK__Service__service__4316F928")
  Student                 Student?            @relation(fields: [student_id], references: [studentId], onDelete: NoAction, onUpdate: NoAction, map: "FK__Service__student__412EB0B6")
  ReceivingUnit           ReceivingUnit?      @relation(fields: [receivingUnit_id], references: [receivingUnitId], onDelete: NoAction, onUpdate: NoAction, map: "ReceivingUnitToService")
  ServiceActivities       ServiceActivities[]

  @@schema("cs")
}

model ServiceActivities {
  serviceActivitieId Int       @id(map: "PK__ServiceA__6ED850E9DF0B16F3") @default(autoincrement())
  service_id         Int?
  description        String?   @db.NVarChar(Max)
  postingDate        DateTime? @db.Date
  hours              Int?
  Service            Service?  @relation(fields: [service_id], references: [serviceId], onDelete: NoAction, onUpdate: NoAction, map: "FK__ServiceAc__servi__4AB81AF0")

  @@schema("cs")
}

model ServiceStatusList {
  serviceStatusId Int       @id(map: "PK__ServiceS__D08F36E54279C1DF") @default(autoincrement())
  status          String?   @db.VarChar(100)
  description     String?   @db.NVarChar(Max)
  Service         Service[]

  @@schema("cs")
}

model ServiceType {
  serviceTypeId      Int       @id(map: "PK__ServiceT__FB4CEA39A820CD31") @default(autoincrement())
  type               String?   @db.VarChar(100)
  description        String?   @db.NVarChar(Max)
  quantityToComplete Int?
  Service            Service[]

  @@schema("cs")
}

model Student {
  studentId          Int       @id(map: "PK__Student__4D11D63C743763C7") @default(autoincrement())
  name               String?   @db.NVarChar(100)
  phoneNumber        String?   @db.VarChar(50)
  careerInCourse     String?   @db.NVarChar(100)
  classGroup         String?   @db.NVarChar(50)
  enrollmentNumber   String?   @db.NVarChar(50)
  careerModality     String?   @db.NVarChar(50)
  grade              Int?
  studentStatus_id   Int?
  institutionalEmail String?   @db.NVarChar(100)
  user_id            Int?
  Service            Service[]
  User               User?     @relation(fields: [user_id], references: [userId], onDelete: NoAction, onUpdate: NoAction, map: "StudentToUser")

  @@schema("cs")
}

model User {
  userId   Int       @id(map: "PK_cs.User") @default(autoincrement())
  userName String    @db.VarChar(50)
  pssKey   String    @db.NVarChar(100)
  email    String    @db.NVarChar(100)
  Student  Student[]

  @@schema("cs")
}

view ServiceActivitiesByUser {
  serviceActivitieId Int       @unique
  service_id         Int?
  student_id         Int?
  description        String?   @db.NVarChar(Max)
  postingDate        DateTime? @db.Date
  hours              Int?

  @@schema("cs")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view TotalActivityHours {
  service_id Int @unique
  totalHours Int?

  @@schema("cs")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view ServiceProgressView {
  serviceId          Int     @unique
  studentId          Int
  name               String? @db.NVarChar(100)
  careerInCourse     String? @db.NVarChar(100)
  institutionName    String? @db.NVarChar(255)
  supervisorName     String? @db.NVarChar(100)
  phoneNumber        String? @db.VarChar(50)
  institutionalEmail String? @db.NVarChar(100)
  type               String? @db.VarChar(100)
  totalHours         Int?
  serviceProgress    Float?
  quantityToComplete Int?

  @@schema("cs")
}
